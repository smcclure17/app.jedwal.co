import{f as s}from"./main-fcwEEnio.js";async function n(o){const a=`${s.api.url}/docs/metadata/${o}`,t=await fetch(a,{credentials:"include"});if(!t.ok)throw new Error(`Failed to fetch: ${JSON.stringify(t)}`);return(await t.json()).apis}const i=async(o,a)=>{const t=await fetch(`${s.api.url}/doc`,{method:"POST",body:JSON.stringify({google_id:o,owner_id:a}),credentials:"include",headers:{"Content-type":"application/json"}});if(t.status===415){const e=await t.json();throw new Error(e.detail)}if(!t.ok)throw new Error(`Request returned status ${t.status}: ${t.statusText}`);return t.json()};async function c(o,a){if((await fetch(`${s.api.url}/doc/${o}/${a}`,{method:"DELETE",credentials:"include"})).status!==200)throw new Error("Failed to delete post")}const d=async(o,a)=>{const t=await fetch(`${s.api.url}/doc/publish`,{method:"POST",body:JSON.stringify({owner_id:o,api_name:a}),credentials:"include",headers:{"Content-type":"application/json"}});if(t.status!==200)throw new Error(`Failed to republish. Status: ${t.status}`);return t.json()};async function u(o,a,t){const e=await fetch(`${s.api.url}/doc/add-category`,{method:"POST",credentials:"include",headers:{"Content-Type":"application/json"},body:JSON.stringify({category:t.trim(),owner_id:o,api_name:a})});if(!e.ok)throw new Error(`Failed to add category. Status: ${e.status}`);return e.json()}async function l(o,a,t){const e=await fetch(`${s.api.url}/doc/delete-category/${o}/${a}?category=${encodeURIComponent(t)}`,{method:"DELETE",credentials:"include"});if(!e.ok)throw new Error(`Failed to remove category. Status: ${e.status}`);return e.json()}async function p(o,a,t){const e=await fetch(`${s.api.url}/doc/update-slug`,{method:"POST",credentials:"include",headers:{"Content-Type":"application/json"},body:JSON.stringify({slug:t.trim(),owner_id:o,api_name:a})});if(!e.ok)throw new Error(`Failed to add category. Status: ${e.status}`);return e.json()}export{u as a,l as b,i as c,c as d,n as f,d as r,p as u};
