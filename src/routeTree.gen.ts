/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as CreateCheckoutRouteImport } from './routes/create-checkout'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DashboardAccountIdRouteImport } from './routes/_dashboard.$accountId'
import { Route as DashboardAccountIdIndexRouteImport } from './routes/_dashboard.$accountId.index'
import { Route as DashboardAccountIdPostsRouteImport } from './routes/_dashboard.$accountId.posts'
import { Route as DashboardAccountIdApisRouteImport } from './routes/_dashboard.$accountId.apis'
import { Route as DashboardAccountIdOrganizationsIndexRouteImport } from './routes/_dashboard.$accountId.organizations.index'
import { Route as DashboardAccountIdPostsPostIdRouteImport } from './routes/_dashboard.$accountId.posts.$postId'
import { Route as DashboardAccountIdOrganizationsCreateRouteImport } from './routes/_dashboard.$accountId.organizations.create'
import { Route as DashboardAccountIdApisApiIdRouteImport } from './routes/_dashboard.$accountId.apis.$apiId'

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const CreateCheckoutRoute = CreateCheckoutRouteImport.update({
  id: '/create-checkout',
  path: '/create-checkout',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardAccountIdRoute = DashboardAccountIdRouteImport.update({
  id: '/_dashboard/$accountId',
  path: '/$accountId',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardAccountIdIndexRoute = DashboardAccountIdIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardAccountIdRoute,
} as any)
const DashboardAccountIdPostsRoute = DashboardAccountIdPostsRouteImport.update({
  id: '/posts',
  path: '/posts',
  getParentRoute: () => DashboardAccountIdRoute,
} as any)
const DashboardAccountIdApisRoute = DashboardAccountIdApisRouteImport.update({
  id: '/apis',
  path: '/apis',
  getParentRoute: () => DashboardAccountIdRoute,
} as any)
const DashboardAccountIdOrganizationsIndexRoute =
  DashboardAccountIdOrganizationsIndexRouteImport.update({
    id: '/organizations/',
    path: '/organizations/',
    getParentRoute: () => DashboardAccountIdRoute,
  } as any)
const DashboardAccountIdPostsPostIdRoute =
  DashboardAccountIdPostsPostIdRouteImport.update({
    id: '/$postId',
    path: '/$postId',
    getParentRoute: () => DashboardAccountIdPostsRoute,
  } as any)
const DashboardAccountIdOrganizationsCreateRoute =
  DashboardAccountIdOrganizationsCreateRouteImport.update({
    id: '/organizations/create',
    path: '/organizations/create',
    getParentRoute: () => DashboardAccountIdRoute,
  } as any)
const DashboardAccountIdApisApiIdRoute =
  DashboardAccountIdApisApiIdRouteImport.update({
    id: '/$apiId',
    path: '/$apiId',
    getParentRoute: () => DashboardAccountIdApisRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/create-checkout': typeof CreateCheckoutRoute
  '/login': typeof LoginRoute
  '/$accountId': typeof DashboardAccountIdRouteWithChildren
  '/$accountId/apis': typeof DashboardAccountIdApisRouteWithChildren
  '/$accountId/posts': typeof DashboardAccountIdPostsRouteWithChildren
  '/$accountId/': typeof DashboardAccountIdIndexRoute
  '/$accountId/apis/$apiId': typeof DashboardAccountIdApisApiIdRoute
  '/$accountId/organizations/create': typeof DashboardAccountIdOrganizationsCreateRoute
  '/$accountId/posts/$postId': typeof DashboardAccountIdPostsPostIdRoute
  '/$accountId/organizations': typeof DashboardAccountIdOrganizationsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/create-checkout': typeof CreateCheckoutRoute
  '/login': typeof LoginRoute
  '/$accountId/apis': typeof DashboardAccountIdApisRouteWithChildren
  '/$accountId/posts': typeof DashboardAccountIdPostsRouteWithChildren
  '/$accountId': typeof DashboardAccountIdIndexRoute
  '/$accountId/apis/$apiId': typeof DashboardAccountIdApisApiIdRoute
  '/$accountId/organizations/create': typeof DashboardAccountIdOrganizationsCreateRoute
  '/$accountId/posts/$postId': typeof DashboardAccountIdPostsPostIdRoute
  '/$accountId/organizations': typeof DashboardAccountIdOrganizationsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/create-checkout': typeof CreateCheckoutRoute
  '/login': typeof LoginRoute
  '/_dashboard/$accountId': typeof DashboardAccountIdRouteWithChildren
  '/_dashboard/$accountId/apis': typeof DashboardAccountIdApisRouteWithChildren
  '/_dashboard/$accountId/posts': typeof DashboardAccountIdPostsRouteWithChildren
  '/_dashboard/$accountId/': typeof DashboardAccountIdIndexRoute
  '/_dashboard/$accountId/apis/$apiId': typeof DashboardAccountIdApisApiIdRoute
  '/_dashboard/$accountId/organizations/create': typeof DashboardAccountIdOrganizationsCreateRoute
  '/_dashboard/$accountId/posts/$postId': typeof DashboardAccountIdPostsPostIdRoute
  '/_dashboard/$accountId/organizations/': typeof DashboardAccountIdOrganizationsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/create-checkout'
    | '/login'
    | '/$accountId'
    | '/$accountId/apis'
    | '/$accountId/posts'
    | '/$accountId/'
    | '/$accountId/apis/$apiId'
    | '/$accountId/organizations/create'
    | '/$accountId/posts/$postId'
    | '/$accountId/organizations'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/create-checkout'
    | '/login'
    | '/$accountId/apis'
    | '/$accountId/posts'
    | '/$accountId'
    | '/$accountId/apis/$apiId'
    | '/$accountId/organizations/create'
    | '/$accountId/posts/$postId'
    | '/$accountId/organizations'
  id:
    | '__root__'
    | '/'
    | '/create-checkout'
    | '/login'
    | '/_dashboard/$accountId'
    | '/_dashboard/$accountId/apis'
    | '/_dashboard/$accountId/posts'
    | '/_dashboard/$accountId/'
    | '/_dashboard/$accountId/apis/$apiId'
    | '/_dashboard/$accountId/organizations/create'
    | '/_dashboard/$accountId/posts/$postId'
    | '/_dashboard/$accountId/organizations/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CreateCheckoutRoute: typeof CreateCheckoutRoute
  LoginRoute: typeof LoginRoute
  DashboardAccountIdRoute: typeof DashboardAccountIdRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/create-checkout': {
      id: '/create-checkout'
      path: '/create-checkout'
      fullPath: '/create-checkout'
      preLoaderRoute: typeof CreateCheckoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_dashboard/$accountId': {
      id: '/_dashboard/$accountId'
      path: '/$accountId'
      fullPath: '/$accountId'
      preLoaderRoute: typeof DashboardAccountIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_dashboard/$accountId/': {
      id: '/_dashboard/$accountId/'
      path: '/'
      fullPath: '/$accountId/'
      preLoaderRoute: typeof DashboardAccountIdIndexRouteImport
      parentRoute: typeof DashboardAccountIdRoute
    }
    '/_dashboard/$accountId/posts': {
      id: '/_dashboard/$accountId/posts'
      path: '/posts'
      fullPath: '/$accountId/posts'
      preLoaderRoute: typeof DashboardAccountIdPostsRouteImport
      parentRoute: typeof DashboardAccountIdRoute
    }
    '/_dashboard/$accountId/apis': {
      id: '/_dashboard/$accountId/apis'
      path: '/apis'
      fullPath: '/$accountId/apis'
      preLoaderRoute: typeof DashboardAccountIdApisRouteImport
      parentRoute: typeof DashboardAccountIdRoute
    }
    '/_dashboard/$accountId/organizations/': {
      id: '/_dashboard/$accountId/organizations/'
      path: '/organizations'
      fullPath: '/$accountId/organizations'
      preLoaderRoute: typeof DashboardAccountIdOrganizationsIndexRouteImport
      parentRoute: typeof DashboardAccountIdRoute
    }
    '/_dashboard/$accountId/posts/$postId': {
      id: '/_dashboard/$accountId/posts/$postId'
      path: '/$postId'
      fullPath: '/$accountId/posts/$postId'
      preLoaderRoute: typeof DashboardAccountIdPostsPostIdRouteImport
      parentRoute: typeof DashboardAccountIdPostsRoute
    }
    '/_dashboard/$accountId/organizations/create': {
      id: '/_dashboard/$accountId/organizations/create'
      path: '/organizations/create'
      fullPath: '/$accountId/organizations/create'
      preLoaderRoute: typeof DashboardAccountIdOrganizationsCreateRouteImport
      parentRoute: typeof DashboardAccountIdRoute
    }
    '/_dashboard/$accountId/apis/$apiId': {
      id: '/_dashboard/$accountId/apis/$apiId'
      path: '/$apiId'
      fullPath: '/$accountId/apis/$apiId'
      preLoaderRoute: typeof DashboardAccountIdApisApiIdRouteImport
      parentRoute: typeof DashboardAccountIdApisRoute
    }
  }
}

interface DashboardAccountIdApisRouteChildren {
  DashboardAccountIdApisApiIdRoute: typeof DashboardAccountIdApisApiIdRoute
}

const DashboardAccountIdApisRouteChildren: DashboardAccountIdApisRouteChildren =
  {
    DashboardAccountIdApisApiIdRoute: DashboardAccountIdApisApiIdRoute,
  }

const DashboardAccountIdApisRouteWithChildren =
  DashboardAccountIdApisRoute._addFileChildren(
    DashboardAccountIdApisRouteChildren,
  )

interface DashboardAccountIdPostsRouteChildren {
  DashboardAccountIdPostsPostIdRoute: typeof DashboardAccountIdPostsPostIdRoute
}

const DashboardAccountIdPostsRouteChildren: DashboardAccountIdPostsRouteChildren =
  {
    DashboardAccountIdPostsPostIdRoute: DashboardAccountIdPostsPostIdRoute,
  }

const DashboardAccountIdPostsRouteWithChildren =
  DashboardAccountIdPostsRoute._addFileChildren(
    DashboardAccountIdPostsRouteChildren,
  )

interface DashboardAccountIdRouteChildren {
  DashboardAccountIdApisRoute: typeof DashboardAccountIdApisRouteWithChildren
  DashboardAccountIdPostsRoute: typeof DashboardAccountIdPostsRouteWithChildren
  DashboardAccountIdIndexRoute: typeof DashboardAccountIdIndexRoute
  DashboardAccountIdOrganizationsCreateRoute: typeof DashboardAccountIdOrganizationsCreateRoute
  DashboardAccountIdOrganizationsIndexRoute: typeof DashboardAccountIdOrganizationsIndexRoute
}

const DashboardAccountIdRouteChildren: DashboardAccountIdRouteChildren = {
  DashboardAccountIdApisRoute: DashboardAccountIdApisRouteWithChildren,
  DashboardAccountIdPostsRoute: DashboardAccountIdPostsRouteWithChildren,
  DashboardAccountIdIndexRoute: DashboardAccountIdIndexRoute,
  DashboardAccountIdOrganizationsCreateRoute:
    DashboardAccountIdOrganizationsCreateRoute,
  DashboardAccountIdOrganizationsIndexRoute:
    DashboardAccountIdOrganizationsIndexRoute,
}

const DashboardAccountIdRouteWithChildren =
  DashboardAccountIdRoute._addFileChildren(DashboardAccountIdRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CreateCheckoutRoute: CreateCheckoutRoute,
  LoginRoute: LoginRoute,
  DashboardAccountIdRoute: DashboardAccountIdRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { createStart } from '@tanstack/react-start'
declare module '@tanstack/react-start' {
  interface Register {
    ssr: true
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
